1、面向对象思想的概述
	1、代码层面的面向过程（强调步骤）：当需要实现一个功能的时候，每一个具体的步骤都要亲力亲为，详细处理每一个步骤
	2、代码层面的面向对象（强调对象）：当需要实现一个功能的时候，不关心具体的步骤，	而是找一个已经具有该功能的人，来帮我做事
2、面向对象思想的举例
	1、面向对象的特点：面向对象思想是一种更符合我们思考习惯的思想，它可以将复杂的事情简单化，并将我们从执行者变成指挥者。
		面向对象的语言中，包含了三大基本特征，即封装、继承、多态
3、类和对象的关系
	1、类：是一组相关属性和行为的集合。可以看做是一类事物的模板，使用事物的属性特征和行为特征来描述该类事物
	2、属性：就是该事物的状态信息
	3、行为：就是该事物能够做什么
	
	
	4、对象：是一类事物的具体实现。对象是类的一个实例。必然具备该类事物的属性和行为
	
	5、类与对象的关系
		1、类是对一类事物的描述，是抽象的
		2、对象是一类事物的实例，是具体的
	***	3、类是对象的模板，对象是类的实体
4、类的定义
	1、成员变量(属性)
	2、成员方法(行为)
	3、注意事项：
		1、成员变量是直接定义在类当中的，在方法外边
		2、成员方法不要写static关键字
5、对象的创建及其使用
	1、通常情况下，一个类并不能直接使用，需要根据类创建一个对象，才能使用
		1、导包：也就是指出需要使用的类在什么位置
			import 包名称.类名称;（对于和当前类属于同一个包的情况，可以省略导包语句不写）
		2、创建
			格式：类名 对象名 = new 类名();
		3、使用分为两种情况
			1、使用成员变量：对象名.成员变量名;
			2、使用成员方法：对象名.成员方法(参数);
	2、注意事项：
		如果成员变量没有赋值，那么将会有一个默认值，规则和数组一样
6、手机类练习
7、一个对象的内存图
	1、注意事项：
		1、new一个对象时，成员变量 参考 方法区中的.class文件的成员变量格式在堆中自己也创建成员变量（成员变量地址在堆中）
		1、new一个对象时，成员方法是保存方法区中的.class文件的成员方法地址（即在堆中的成员方法的地址是方法区中的成员方法地址）
	
8、两个对象使用同一个方法的内存
	注意点：同一个类创建不同的对象，创建的成员方法地址在堆中是不一样的，但是都是引用方法区中同一个地址。（即成员方法的堆地址不一样，方法区地址一样）
9、两个引用指向同一个对象的内存空间

10、使用对象类型作为方法的参数
	注意点：当一个对象作为参数，传递到方法中时，实际上传递进去的是对象的"地址值";
11、使用对象类型作为方法的返回值
	当使用一个对象类型作为方法的返回值时，返回值其实就是对象的"地址值";
12、成员变量和局部变量的区别
	1、定义的位置不一样【重点】
		1、局部变量：在方法的内部
		2、成员变量：在方法的外部，直接写在类中
	2、作用范围不一样【重点】
		1、局部变量：只有方法当中才可以使用，出了方法就不可以使用
		2、成员方法：整个类都可以通用
***	3、默认值不一样【重点】
		1、局部变量：没有默认值，如果想使用，必须手动赋值（如果没有初始化就使用就会报错）
		2、成员变量：如果没有赋值，会有默认值，规则和数组一样
	4、内存的位置不一样（了解）
		1、局部变量：位于栈内存
		2、成员变量：位于堆内存
	5、生命周期不一样（了解）
		1、局部变量：随着方法进栈而诞生，随着方法出栈而消失
		2、成员变量：随着对象创建而诞生，随着对象被垃圾回收而消失
13、面向对象三大特征之封装性
	1、面向对象的三大特征“封装、继承、多态
	2、封装性在Java中的体现：
		1、方法就是一种封装
		2、关键字private也是一种封装
	3、封装就是将一些细节信息隐藏起来，对于外界不可见
14、private关键字的作用及使用
	1、问题描述：给一个类的变量赋值的时候，无法阻止不合理的数值被设置进来
	2、解决方法：用private关键字将需要保护的成员变量进行修饰，一旦使用了private进行修饰，那么本类当中任然可以随意访问。但是超出了本类范围之外就不能再直接访问了。
	
	3、间接访问private成员变量，就是定义一对Getter/Setter
		命名规则：必须叫setXxx或者是getXxx
		对于Getter来说，不能有参数，返回值类型和成员变量对应
		对于Setter来说，不能有返回值，参数类型必须和成员变量对应
		
	***	注意事项：对于基本数据类型当中的boolean值，Getter方法一定要写成isXxx的形式，而setXxx规则不变
15、练习使用private关键字定义
	对于基本数据类型当中的boolean值，Getter方法一定要写成isXxx的形式，而setXxx规则不变
16、this关键字的作用
	1、在重名的时候，起到区分的效果
	2、当方法的局部变量和类的成员变量重名的时候，根据就近原则，优先使用局部变量。如果需要访问本类当中的成员变量，需要使用格式：this.成员变量名
***	3、通过谁调用的方法，谁就是this。
17、构造方法
	1、构造方法是专门用来创建对象的方法，当我们通过关键字new来创建对象时，其实就是在调用构造方法。
		格式：public 类名称(参数类型 参数名称){
			方法体;
		}
	2、注意事项：
		1、构造方法的名称必须和所在类名称完全一样，就连大小写也要一样;
		2、构造方法不要写返回值类型,连void也不要写
		3、构造方法不能return一个具体的返回值
		4、如果没有编写任何构造方法，那么编辑器将会默认赠送一个构造方法，没有参数，方法体什么事情都不做。
		5、一旦编写了至少一个构造方法，那么编辑器将不再赠送默认构造方法。
		6、构造方法也是可以进行重载的。（重载：方法名称相同，参数列表不同）
		7、一个完整的类：
			1、成员变量
			2、无参构造方法
			3、全参构造方法
			4、Getter方法和Setter方法
18、定义一个标准的类
	1、一个标准的类通常要拥有下面四个组成部分：
		1、所有的成员变量都要使用private关键字修饰。
		2、为每一个成员变量编写一对Getter方法/Setter方法
		3、编写一个无参构造方法
		4、编写一个全参构造方法
		
	2、这样标准的类也叫做	Java Bean